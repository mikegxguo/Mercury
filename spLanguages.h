#ifndef _SPLANGUAGE_H_
#define _SPLANGUAGE_H_

#if 0
/*
CS 		Czech 		ƒåe≈°tina 	 
DA 		Danish 		Dansk 	 
DE 		German 		Deutsch 	
EL 		Greek 		ŒïŒªŒªŒ∑ŒΩŒπŒ∫Œ¨

EN 		English 	English 	
ES 		Spanish 	Espa√±ol 	
FR 		French 		Fran√ßais 	
HR 		Croatian 	Hrvatski 	 
IT 		Italian 	Italiano 	
LV 		Latvian 	Latvie≈°u

HU 		Hungarian 	Magyar 	 
NL 		Dutch 		Nederlands 	
NO 		Norwegian 	Norsk 	 
PL 		Polish 		Polski 	 
PT 		Portuguese 	Portugu√™s 	 
RU 		Russian 	–†—É—Å—Å–∫–∏–π 	 
SL 		Slovenian 	Sloven≈°ƒçina 	 
FI 		Finnish 	Suomi 	 
SV 		Swedish 	Svenska 	 
TR 		Turkish 	T√ºrk√ße

JA 		Japanese 	Êó•Êú¨Ë™?
*/
#endif

/*
   Language ID
*/
/*#define  LID_EN      0
#define  LID_ES      1
#define  LID_DE      2
#define  LID_FR      3
#define  LID_IT      4
#define  LID_NL      5     ///Dutch
#define	 LID_CA		 6
#define  LID_00      99    ///fake, use for query



	predefined string
*/
typedef struct tStringSdef
{
	const unsigned short				uStrID;				/// id of the string
	const char*  				sStringdef;			/// string
}STRINGSDEF;


/*
	language list
*/
typedef struct tLanguageList
{
	const unsigned short				uLangID;			/// id of the language
	STRINGSDEF**				xStringTable;		/// table index
}LANGUAGELIST;

/* get string with specified string ID */
char* spIDgetString( unsigned short stringID );
/* get string with specified string ID and lanuage ID */
char* spIDgetStringLang( unsigned short stringID, unsigned short langID );
/* set new languge wit ID and return currnt language ID. input LID_00 for query. */
unsigned short spSetLanguage( unsigned short langID );
/*	inital language settingith stored record */
unsigned short spInitLanguageSet( void );


#endif		///_SPLANGUAGE_H_